[project]
name = 'asdf_standard'
description = 'The ASDF Standard schemas'
readme = 'README.md'
requires-python = '>=3.9'
license-files = ['LICENSE']
authors = [{ name = 'The ASDF Developers', email = 'help@stsci.edu' }]
classifiers = [
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Development Status :: 5 - Production/Stable',
]
dependencies = [
]
dynamic = ['version']

[project.optional-dependencies]
docs = [
    'tomli',
    'sphinx >= 4.0',
    'sphinx-asdf >= 0.1.3',
    'graphviz',
    'matplotlib',
    'docutils',
    'furo',
]
test = [
    'pytest',
    'pytest-asdf-plugin',
    'pyyaml',
    'asdf >= 3.0.0',
    'packaging>=16.0',
]

[project.urls]
'tracker' = 'https://github.com/asdf-format/asdf-standard/issues'
'documentation' = 'https://www.asdf-format.org/projects/asdf-standard/en/latest'
'repository' = 'https://github.com/asdf-format/asdf-standard'

[project.entry-points]
'asdf.resource_mappings' = { asdf_standard = 'asdf_standard.integration:get_resource_mappings' }

[build-system]
requires = [
    "setuptools >=77",
    "setuptools_scm[toml] >=3.4",
    "wheel",
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/asdf_standard/_version.py"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"asdf_standard.resources" = [
    "**/*.yaml",
]

[tool.pytest.ini_options]
asdf_schema_root = 'resources'
asdf_schema_tests_enabled = 'true'
asdf_schema_skip_tests = """
    stsci.edu/asdf/wcs/step-1.1.0.yaml
    stsci.edu/asdf/wcs/step-1.2.0.yaml
    stsci.edu/asdf/wcs/wcs-1.1.0.yaml
    stsci.edu/asdf/wcs/wcs-1.2.0.yaml
    stsci.edu/asdf/core/integer-1.2.0.yaml
    stsci.edu/asdf/core/ndarray-1.2.0.yaml
"""
asdf_schema_ignore_unrecognized_tag = 'true'
addopts = '--color=yes -r a'
filterwarnings = [
    "error",
]

[tool.black]
line-length = 120
force-exclude = '''
^/(
  (
      \.eggs
    | \.git
    | \.pytest_cache
    | \.tox
    | reference_files
    | build
    | dist
  )/
)
'''

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "F", # pyflakes, autoflake
    "I", # isort
    "S", # bandit
    "UP", # pyupgrade
    "RUF",  # ruff specific, includes yesqa
]
extend-ignore = [
    "RUF005", # Checks for uses of the + operator to concatenate collections.
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["S101"]
"tests/*" = ["S101"]
"scripts/*" = ["S603"]

[tool.codespell]
skip="*.pdf,*.fits,*.asdf,.tox,build,./tags,.git,docs/build"
